//=============================================================================
//
// file :         PilatusClass.h
//
// description :  Include for the PilatusClass root class.
//                This class is the singleton class for
//                the Pilatus device class.
//                It contains all properties and methods which the 
//                Pilatus requires only once e.g. the commands.
//			
// project :      TANGO Device Server
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL: $
//
// CVS only:
// $Source:  $
// $Log:  $
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#ifndef _PILATUSCLASS_H
#define _PILATUSCLASS_H

#include <tango.h>
#include <PilatusPixelDetector.h>


namespace Pilatus_ns
{//=====================================
//	Define classes for attributes
//=====================================
//=========================================
//	Define classes for commands
//=========================================
//
// The PilatusClass singleton definition
//

class
#ifdef WIN32
	__declspec(dllexport)
#endif
	PilatusClass : public Tango::DeviceClass
{
public:
//	properties member data

//	add your own data members here
//------------------------------------

public:
	Tango::DbData	cl_prop;
	Tango::DbData	cl_def_prop;
	Tango::DbData	dev_def_prop;

//	Method prototypes
	static PilatusClass *init(const char *);
	static PilatusClass *instance();
	~PilatusClass();
	Tango::DbDatum	get_class_property(string &);
	Tango::DbDatum	get_default_device_property(string &);
	Tango::DbDatum	get_default_class_property(string &);
	
protected:
	PilatusClass(string &);
	static PilatusClass *_instance;
	void command_factory();
	void get_class_property();
	void write_class_property();
	void set_default_property();
	string get_cvstag();
	string get_cvsroot();

private:
	void device_factory(const Tango::DevVarStringArray *);
};


}	//	namespace Pilatus_ns

#endif // _PILATUSCLASS_H
