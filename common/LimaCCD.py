#=============================================================================
#
# file :        LimaTacoCCDs.py
#
# description : Python source for the LimaCCDs and its commands. 
#                The class is derived from Device. It represents the
#                CORBA servant object which will be accessed from the
#                network. All commands which can be executed on the
#         LimaTacoCCDs are implemented in this file.
#
# project :    TANGO Device Server
#
# copyleft :    European Synchrotron Radiation Facility
#        BP 220, Grenoble 38043
#        FRANCE
#
#=============================================================================
#        This file is generated by seb
#
#      (c) - BLISS - ESRF
#=============================================================================
#

import sys
import PyTango

import lima

import plugins
import camera


lima.DebParams.setTypeFlags(0)

#Small Hack
class _Wrapped:
    def __init__(self,class_type,ctrl) :
        self.__class_type = class_type
        self.__ctrl = weakref.ref(ctrl)
        
    def __call__(self,*args) :
        inst = self.__class_type(*args)
        if hasattr(inst,'set_control_ref') :
            inst.set_control_ref(self.__ctrl)
        return inst


class LimaCCDs(PyTango.Device_4Impl) :
    def __init__(self,*args) :
        PyTango.Device_4Impl.__init__(self,*args)
        self.init_device()
        self.__lima_control = None

    def delete_device(self) :
        try:
            m = __import__('camera.%s' % (self.LimaCameraType),None,None,'camera.%s' % (self.LimaCameraType))
        except ImportError:
            pass
        else:
            m.close_interface()

    def init_device(self) :
        self.set_state(PyTango.DevState.ON)
        self.get_device_properties(self.get_device_class())
        try:
            m = __import__('camera.%s' % (self.LimaCameraType),None,None,'camera.%s' % (self.LimaCameraType))
        except ImportError:
            import traceback
            traceback.print_exc()
            self.set_state(PyTango.DevState.FAULT)
        else:
            self.__control = m.get_control()
            _set_control_ref(weakref.ref(self.__control))
            
            try:
                specificClass,specificDevice = m.get_tango_specific_class_n_device()
            except AttributeError: pass
            else:
                util = PyTango.Util.instance()
                if specificClass and specificDevice:
                    util.create_device(specificClass,specificDevice)


class LimaCCDsClass(PyTango.DeviceClass) :
    #    Class Properties
    class_property_list = {
        }


    #    Device Properties
    device_property_list = {
        'LimaCameraType' :
        [PyTango.DevString,
         "Camera Plugin name",[]],
        }

    #    Command definitions
    cmd_list = {
        }
    
    #    Attribute definitions
    attr_list = {
        }

def declare_camera_n_commun_to_tango_world(util) :
    for module_name in camera.__all__:
        try:
            m = __import__('camera.%s' % (module_name),None,None,'camera.%s' % (module_name))
        except ImportError:
            continue
        else:
            try:
                specificClass,specificDevice = m.get_tango_specific_class_n_device()
            except AttributeError:
                continue
            else:
                util.add_TgClass(specificClass,specificDevice,specificDevice.__name__)

    for module_name in plugins.__all__:
        try:
            m = __import__('plugins.%s' % (module_name),None,None,'plugins.%s' % (module_name))
        except ImportError:
            continue
        else:
            try:
                specificClass,specificDevice = m.get_tango_specific_class_n_device()
            except AttributeError:
                continue
            else:
                util.add_TgClass(specificClass,specificDevice,specificDevice.__name__)

def _set_control_ref(ctrl_ref) :
    for module_name in plugins.__all__:
        try:
            m = __import__('plugins.%s' % (module_name),None,None,'plugins.%s' % (module_name))
            if hasattr(m,'set_control_ref') :
                m.set_control_ref(ctrl_ref)
        except ImportError:
            continue
               


#==================================================================
#
#    LimaCCDs class main method
#
#==================================================================
if __name__ == '__main__':
    try:
        py = PyTango.Util(sys.argv)
        py.add_TgClass(LimaCCDsClass,LimaCCDs,'LimaCCDs')
        declare_camera_n_commun_to_tango_world(py)
        
        U = PyTango.Util.instance()
        U.server_init()
        U.server_run()

    except PyTango.DevFailed,e:
        print '-------> Received a DevFailed exception:',e
    except Exception,e:
        print '-------> An unforeseen exception occured....',e
